// File generated by FlutterFire CLI.
// ignore_for_file: type=lint

// Importa a biblioteca 'firebase_core' para usar o FirebaseOptions,
// que fornece opções de configuração para inicializar o Firebase.
import 'package:firebase_core/firebase_core.dart' show FirebaseOptions;

// Importa componentes específicos da biblioteca 'flutter/foundation.dart',
// como 'defaultTargetPlatform', 'kIsWeb', e 'TargetPlatform'.
// Estas funcionalidades permitem verificar a plataforma alvo e se o aplicativo está sendo executado na web.
import 'package:flutter/foundation.dart'
    show defaultTargetPlatform, kIsWeb, TargetPlatform;

/// Classe que fornece as configurações padrão de [FirebaseOptions] para diferentes plataformas.
class DefaultFirebaseOptions {
  
  // Getter que retorna as opções de configuração do Firebase conforme a plataforma.
  static FirebaseOptions get currentPlatform {
    // Verifica se a plataforma é web.
    if (kIsWeb) {
      throw UnsupportedError(
        // Se a plataforma for a web, lança um erro, pois não há configuração para a web.
        'DefaultFirebaseOptions have not been configured for web - '
        'you can reconfigure this by running the FlutterFire CLI again.',
      );
    }

    // Determina a plataforma alvo do dispositivo e retorna as configurações correspondentes.
    switch (defaultTargetPlatform) {
      case TargetPlatform.android:
        // Se a plataforma for Android, retorna as configurações específicas para Android.
        return android;
      case TargetPlatform.iOS:
        // Se a plataforma for iOS, retorna as configurações específicas para iOS.
        return ios;
      case TargetPlatform.macOS:
        // Se a plataforma for macOS, lança um erro, pois as configurações não foram configuradas.
        throw UnsupportedError(
          'DefaultFirebaseOptions have not been configured for macos - '
          'you can reconfigure this by running the FlutterFire CLI again.',
        );
      case TargetPlatform.windows:
        // Se a plataforma for Windows, lança um erro, pois as configurações não foram configuradas.
        throw UnsupportedError(
          'DefaultFirebaseOptions have not been configured for windows - '
          'you can reconfigure this by running the FlutterFire CLI again.',
        );
      case TargetPlatform.linux:
        // Se a plataforma for Linux, lança um erro, pois as configurações não foram configuradas.
        throw UnsupportedError(
          'DefaultFirebaseOptions have not been configured for linux - '
          'you can reconfigure this by running the FlutterFire CLI again.',
        );
      default:
        // Se a plataforma não for suportada, lança um erro.
        throw UnsupportedError(
          'DefaultFirebaseOptions are not supported for this platform.',
        );
    }
  }

  // Definindo as opções específicas do Firebase para a plataforma Android.
  static const FirebaseOptions android = FirebaseOptions(
    apiKey: 'AIzaSyCgyBihZfGrxJ1f3kJwfW3wcSeuvu8hiL4', // Chave da API para a plataforma Android.
    appId: '1:172667479615:android:aced900a1fb6bab563fa8a', // ID do aplicativo Android.
    messagingSenderId: '172667479615', // ID do remetente para notificações push.
    projectId: 'food-delivery-app-3e93d', // ID do projeto Firebase.
    storageBucket: 'food-delivery-app-3e93d.firebasestorage.app', // Bucket de armazenamento do Firebase.
  );

  // Definindo as opções específicas do Firebase para a plataforma iOS.
  static const FirebaseOptions ios = FirebaseOptions(
    apiKey: 'AIzaSyCBiEdSTKEHkcAlJd3ep3sqQ4k_A0NKXh0', // Chave da API para a plataforma iOS.
    appId: '1:172667479615:ios:3fa5dd2051e51b3963fa8a', // ID do aplicativo iOS.
    messagingSenderId: '172667479615', // ID do remetente para notificações push.
    projectId: 'food-delivery-app-3e93d', // ID do projeto Firebase.
    storageBucket: 'food-delivery-app-3e93d.firebasestorage.app', // Bucket de armazenamento do Firebase.
    iosBundleId: 'com.fooddeliveryapp.foodDeliveryApp', // Identificador do bundle para iOS.
  );
}

// Projeto de Computação Móvel: Delivery App
// Trabalho realizado por:
// -> Miguel Magalhães, Nº2021103166;
// -> Fábio Sequeira, Nº2022102906.
// ISPGAYA